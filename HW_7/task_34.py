# Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм.
# Поскольку разобраться в его кричалках не настолько просто, насколько легко он их придумывает,
# Вам стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число гласных букв)
# в каждой фразе стихотворения одинаковое. Фраза может состоять из одного слова,
# если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг от друга пробелами.
# Стихотворение  Винни-Пух вбивает в программу с клавиатуры.
# В ответе напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не в порядке

# *Пример:*

# **Ввод:** пара-ра-рам рам-пам-папам па-ра-па-да
# **Вывод:** Парам пам-пам

# Первай способ
# def f(phrases):
#     vowels = ['а', 'о', 'у', 'ы', 'э', 'е', 'ё', 'и', 'ю', 'я']
#     counts = []
#     for words in phrases:
#         count_letter = 0
#         for letter in words:
#             if letter in vowels:
#                 count_letter += 1
#         counts.append(count_letter)
#     print('Количество гласных во фразах:', *counts) # Для удобства и самопроверки
#     if len(set(counts)) == 1:
#         print('----------------') # Для красоты
#         return 'Парам пам-пам'
#     print('----------------') # Для красоты
#     return 'Пам парам'


# print(f(input('Введите стихотворение: ').lower().split()))

# Второй способ, по сути такой же, но разбитый на две функции
# def count_vowels(word):
#     vowels = 'аоуыэеёиюя'
#     count = 0
#     for letter in word:
#         if letter.lower() in vowels:
#             count += 1
#     return count

# def rhythm(poem):
#     phrases = poem.split()
#     print(phrases) # Наглядно делим стих на фразы
#     counts = [count_vowels(word) for word in phrases]
#     print('Количество гласных во фразах:', *counts) # Для удобства и самопроверки
#     if len(set(counts)) == 1:
#         print('----------------') # Для красоты
#         return 'Парам пам-пам'
#     print('----------------') # Для красоты
#     return 'Пам парам'


# poem = input('Введите стихотворение: ')
# print(rhythm(poem))

# Третий вариант. сначала переделал так:
# vowels = 'аоуыэеёиюя'

# def count_vowels(word):
#     char = ''
#     for letter in word:
#         if letter.lower() in vowels:
#             char += letter
#     return len(char)

# if len(set(map(count_vowels, input('Введите стихотворение: ').split()))) == 1:
#     print('----------------') # Для красоты
#     print('Парам пам-пам')
# else:
#     print('----------------') # Для красоты
#     print('Пам парам')

# Четвертый вариант, без циклов:
vowels = ['а', 'о', 'у', 'ы', 'э', 'е', 'ё', 'и', 'ю', 'я'] # 1

def count_vowels(word): 
    return len(list(filter(lambda letter: letter in vowels, word.lower()))) # 4


words = input('Введите стихотворение: ').split() # 2
count = list(map(count_vowels, words)) # 3
if len(set(count)) == 1: # 5
    print('----------------') # Для красоты
    print('Парам пам-пам')
else:
    print('----------------') # Для красоты
    print('Пам парам')

# 1. создаем список из гласных
# 2. создаем и заполняем список словами из введеной строки, разбив ее методом '.split()'' по пробелам
# 3. создаем и заполняем список результатами выполнения метода map для применения функции 'coun_vowels' 
# к каждому слову из списка 'words' - длинами (пункт 4)
# 4. возвращаем длину списка, заполненого результатом работы метода 'filter'.
# используя анонимную функцию 'lambda' проверяем входит ли буква из нашего слова, 
# к которому применили метод '.lower' для приведения к нижнему регистру, в созданный 
# в глобальной области определения список 'vowels'. если да, помещаем ее в список.
# 5. преобразовав список 'count' с помощью команды 'set()' во множество, сравниваем его длину с 1. 
# (множество состоит из неповторяющихся значений. если они одинаковы, то при преобразовании возьмется только один)